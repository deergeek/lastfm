{"ast":null,"code":"var _jsxFileName = \"/Users/ratkinson/Desktop/working/lastfm-app/src/components/ArtistList.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport { BrowserRouter as Router, Switch, Route, Link, useParams, useRouteMatch } from \"react-router-dom\";\nimport ReactModal from 'react-modal';\n\nclass ArtistList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      artistList: [],\n      artistContent: '',\n      showModal: false\n    };\n    this.handleOpenModal = this.handleOpenModal.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n    this._handleSubmit = this._handleSubmit.bind(this);\n    this._handleChange = this._handleChange.bind(this);\n    this._handleChangeMsg = this._handleChangeMsg.bind(this);\n  }\n\n  handleOpenModal(e) {\n    // this.setState({ showModal: true });\n    var clickedArtist = e.target.innerText;\n    console.log(clickedArtist);\n    $.ajax({\n      url: \"http://ws.audioscrobbler.com/2.0/\",\n      type: 'POST',\n      contentType: \"application/json; charset=utf-8\",\n      data: {\n        method: 'artist.getInfo',\n        artist: clickedArtist,\n        api_key: '278b674c37ebf25ee302d1bc7edb0b76',\n        format: 'json'\n      },\n      cache: false,\n      success: function (data) {\n        console.log('yes'); // $('#artistbio').html(data['artist']['bio']['content']);\n      }\n    });\n  }\n\n  handleCloseModal() {\n    this.setState({\n      showModal: false\n    });\n  }\n\n  _handleChange(e) {}\n\n  _handleChangeMsg(e) {}\n\n  _handleSubmit(e) {\n    e.preventDefault();\n    $.ajax({\n      url: \"http://ws.audioscrobbler.com/2.0/\",\n      type: 'POST',\n      contentType: \"application/json; charset=utf-8\",\n      data: {\n        method: 'artist.search',\n        artist: $('#artist').val(),\n        api_key: '278b674c37ebf25ee302d1bc7edb0b76',\n        format: 'json'\n      },\n      cache: false,\n      success: function (data) {\n        // Success..\n        const artists = data['results']['artistmatches']['artist'];\n        this.setState({\n          artistList: artists\n        });\n        /* $('li').click(function(e) {\n          var clickedArtist = $(this).text();\n          console.log(clickedArtist);\n          $.ajax({\n              url: \"http://ws.audioscrobbler.com/2.0/\",\n              type: 'POST',\n              contentType: \"application/json; charset=utf-8\",\n              data: {\n                method: 'artist.getInfo',\n                artist: clickedArtist,\n                api_key : '278b674c37ebf25ee302d1bc7edb0b76',\n                format : 'json'\n              },\n              cache: false,\n              success: function(data) {\n                  console.log(data['artist']['bio']['content']);\n                  $('#artistbio').html(data['artist']['bio']['content']);\n                \n                  \n              }\n          });\n        });*/\n      }.bind(this),\n      // Fail..\n      error: function (xhr, status, err) {\n        console.log(xhr, status);\n        console.log(err);\n      }.bind(this)\n    });\n  }\n\n  render() {\n    function handleCheck(e) {// console.log(e.target);\n    }\n\n    const items = this.state.artistList.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      onClick: this.handleOpenModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 5\n      }\n    }, item.name));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"artists\",\n      id: \"artistList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      id: \"searchartists\",\n      onSubmit: this._handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search Artist\",\n      name: \"artist\",\n      id: \"artist\",\n      onChange: this._handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }, \"Go\"))), /*#__PURE__*/React.createElement(\"ul\", {\n      id: \"results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }, items), /*#__PURE__*/React.createElement(\"p\", {\n      id: \"artistbio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ReactModal, {\n      isOpen: this.state.showModal,\n      contentLabel: \"Minimal Modal Example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nexport default ArtistList;","map":{"version":3,"sources":["/Users/ratkinson/Desktop/working/lastfm-app/src/components/ArtistList.js"],"names":["React","Component","$","BrowserRouter","Router","Switch","Route","Link","useParams","useRouteMatch","ReactModal","ArtistList","constructor","props","state","artistList","artistContent","showModal","handleOpenModal","bind","handleCloseModal","_handleSubmit","_handleChange","_handleChangeMsg","e","clickedArtist","target","innerText","console","log","ajax","url","type","contentType","data","method","artist","api_key","format","cache","success","setState","preventDefault","val","artists","error","xhr","status","err","render","handleCheck","items","map","item","index","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport $ from 'jquery';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    useParams,\n    useRouteMatch\n  } from \"react-router-dom\";\nimport ReactModal from 'react-modal';\n\nclass ArtistList extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n     artistList: [],\n     artistContent: '',\n     showModal: false\n    };\n\n    this.handleOpenModal = this.handleOpenModal.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n\n    this._handleSubmit = this._handleSubmit.bind(this);\n    this._handleChange = this._handleChange.bind(this);\n    this._handleChangeMsg = this._handleChangeMsg.bind(this);\n  }\n  handleOpenModal (e) {\n   // this.setState({ showModal: true });\n    var clickedArtist = e.target.innerText;\n        console.log(clickedArtist);\n        $.ajax({\n            url: \"http://ws.audioscrobbler.com/2.0/\",\n            type: 'POST',\n            contentType: \"application/json; charset=utf-8\",\n            data: {\n              method: 'artist.getInfo',\n              artist: clickedArtist,\n              api_key : '278b674c37ebf25ee302d1bc7edb0b76',\n              format : 'json'\n            },\n            cache: false,\n            success: function(data) {\n                console.log('yes');\n               // $('#artistbio').html(data['artist']['bio']['content']);\n              \n                \n            }\n        });\n  }\n  \n  handleCloseModal () {\n    this.setState({ showModal: false });\n  }\n  \n  _handleChange(e) {\n  }\n  \n  _handleChangeMsg(e) {\n  }\n\n  _handleSubmit(e) {\n   \n    e.preventDefault();\n\n    $.ajax({\n      url: \"http://ws.audioscrobbler.com/2.0/\",\n      type: 'POST',\n      contentType: \"application/json; charset=utf-8\",\n      data: {\n        method: 'artist.search',\n        artist: $('#artist').val(),\n        api_key : '278b674c37ebf25ee302d1bc7edb0b76',\n        format : 'json'\n      },\n      cache: false,\n      success: function(data) {\n        // Success..\n        const artists = data['results']['artistmatches']['artist'];\n        \n        this.setState({\n            artistList: artists\n        });\n      /* $('li').click(function(e) {\n        var clickedArtist = $(this).text();\n        console.log(clickedArtist);\n        $.ajax({\n            url: \"http://ws.audioscrobbler.com/2.0/\",\n            type: 'POST',\n            contentType: \"application/json; charset=utf-8\",\n            data: {\n              method: 'artist.getInfo',\n              artist: clickedArtist,\n              api_key : '278b674c37ebf25ee302d1bc7edb0b76',\n              format : 'json'\n            },\n            cache: false,\n            success: function(data) {\n                console.log(data['artist']['bio']['content']);\n                $('#artistbio').html(data['artist']['bio']['content']);\n              \n                \n            }\n        });\n    });*/\n      }.bind(this),\n      // Fail..\n      error: function(xhr, status, err) {\n        console.log(xhr, status);\n        console.log(err);\n        \n      }.bind(this)\n    });\n\n   \n}\n \n  render() {\n    function handleCheck(e){\n       // console.log(e.target);\n    }\n    const items = this.state.artistList.map((item, index) =>\n    <li key={index} onClick={this.handleOpenModal}>{item.name}</li>\n    );\n    return (\n    <div>\n       \n      <div className=\"artists\" id=\"artistList\">\n        <div className=\"filter\">\n        <form id=\"searchartists\" onSubmit={this._handleSubmit}>\n          <input type=\"text\" placeholder=\"Search Artist\" name=\"artist\" id='artist' onChange={this._handleChange} />\n          <button type='submit'>Go</button>\n        </form>\n        </div>\n        \n        <ul id=\"results\">{items}</ul>\n        <p id=\"artistbio\"></p>\n        <ReactModal \n           isOpen={this.state.showModal}\n           contentLabel=\"Minimal Modal Example\"\n        ></ReactModal>\n      </div>\n      \n\n</div>\n    )\n  }\n  \n}\n\nexport default ArtistList;"]},"metadata":{},"sourceType":"module"}