{"ast":null,"code":"var _jsxFileName = \"/Users/ratkinson/Desktop/working/lastfm-app/src/components/ArtistList.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\n\nclass ArtistList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      artistList: []\n    };\n    this._handleSubmit = this._handleSubmit.bind(this);\n    this._handleChange = this._handleChange.bind(this);\n    this._handleChangeMsg = this._handleChangeMsg.bind(this);\n  }\n\n  _handleChange(e) {}\n\n  _handleChangeMsg(e) {}\n\n  _handleSubmit(e) {\n    e.preventDefault();\n    $.ajax({\n      url: \"http://ws.audioscrobbler.com/2.0/\",\n      type: 'POST',\n      contentType: \"application/json; charset=utf-8\",\n      data: {\n        method: 'artist.search',\n        artist: $('#artist').val(),\n        api_key: '278b674c37ebf25ee302d1bc7edb0b76',\n        format: 'json'\n      },\n      cache: false,\n      success: function (data) {\n        // Success..\n        const artists = data['results']['artistmatches']['artist'];\n        this.setState({\n          artistList: artists\n        });\n        $('li').click(function (e) {\n          var clickedArtist = $(this).text();\n          $.ajax({\n            url: \"http://ws.audioscrobbler.com/2.0/\",\n            type: 'POST',\n            contentType: \"application/json; charset=utf-8\",\n            data: {\n              method: 'artist.getInfo',\n              artist: clickedArtist,\n              api_key: '278b674c37ebf25ee302d1bc7edb0b76',\n              format: 'json'\n            },\n            cache: false,\n            success: function (data) {\n              console.log('success');\n            }\n          });\n        });\n      }.bind(this),\n      // Fail..\n      error: function (xhr, status, err) {\n        console.log(xhr, status);\n        console.log(err);\n      }.bind(this)\n    });\n  }\n\n  render() {\n    const items = this.state.artistList.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"{item.image[0].src}\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }), item.name));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"artists\",\n      id: \"artistList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      id: \"searchartists\",\n      onSubmit: this._handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search Artist\",\n      name: \"artist\",\n      id: \"artist\",\n      onChange: this._handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, \"Submit\"))), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, items));\n  }\n\n}\n\nexport default ArtistList;","map":{"version":3,"sources":["/Users/ratkinson/Desktop/working/lastfm-app/src/components/ArtistList.js"],"names":["React","Component","$","ArtistList","constructor","props","state","artistList","_handleSubmit","bind","_handleChange","_handleChangeMsg","e","preventDefault","ajax","url","type","contentType","data","method","artist","val","api_key","format","cache","success","artists","setState","click","clickedArtist","text","console","log","error","xhr","status","err","render","items","map","item","index","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport $ from 'jquery';\n\nclass ArtistList extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n     artistList: []\n    };\n\n    this._handleSubmit = this._handleSubmit.bind(this);\n    this._handleChange = this._handleChange.bind(this);\n    this._handleChangeMsg = this._handleChangeMsg.bind(this);\n  }\n\n  _handleChange(e) {\n  }\n  \n  _handleChangeMsg(e) {\n  }\n\n  _handleSubmit(e) {\n   \n    e.preventDefault();\n\n    $.ajax({\n      url: \"http://ws.audioscrobbler.com/2.0/\",\n      type: 'POST',\n      contentType: \"application/json; charset=utf-8\",\n      data: {\n        method: 'artist.search',\n        artist: $('#artist').val(),\n        api_key : '278b674c37ebf25ee302d1bc7edb0b76',\n        format : 'json'\n      },\n      cache: false,\n      success: function(data) {\n        // Success..\n        const artists = data['results']['artistmatches']['artist'];\n        this.setState({\n            artistList: artists\n        });\n       $('li').click(function(e) {\n        var clickedArtist = $(this).text();\n        $.ajax({\n            url: \"http://ws.audioscrobbler.com/2.0/\",\n            type: 'POST',\n            contentType: \"application/json; charset=utf-8\",\n            data: {\n              method: 'artist.getInfo',\n              artist: clickedArtist,\n              api_key : '278b674c37ebf25ee302d1bc7edb0b76',\n              format : 'json'\n            },\n            cache: false,\n            success: function(data) {\n                console.log('success');\n            }\n        });\n    });\n      }.bind(this),\n      // Fail..\n      error: function(xhr, status, err) {\n        console.log(xhr, status);\n        console.log(err);\n        \n      }.bind(this)\n    });\n\n    \n}\n \n  render() {\n    const items = this.state.artistList.map((item, index) =>\n    <li key={index}><img src=\"{item.image[0].src}\" />{item.name}</li>\n    );\n    return (\n      <div className=\"artists\" id=\"artistList\">\n        <div className=\"filter\">\n        <form id=\"searchartists\" onSubmit={this._handleSubmit}>\n          <input type=\"text\" placeholder=\"Search Artist\" name=\"artist\" id='artist' onChange={this._handleChange} />\n          <button type='submit'>Submit</button>\n        </form>\n        </div>\n        <ul>{items}</ul>\n      </div>\n    )\n  }\n}\n\nexport default ArtistList;"]},"metadata":{},"sourceType":"module"}